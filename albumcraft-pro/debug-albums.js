const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function debugAlbums() {
  try {
    console.log('üîç Verificando eventos e √°lbuns...\n');

    // Buscar todos os eventos
    const events = await prisma.photoEvent.findMany({
      include: {
        albums: {
          include: {
            _count: {
              select: {
                photos: true,
              },
            },
          },
        },
        _count: {
          select: {
            albums: true,
            users: true,
          },
        },
      },
    });

    console.log(`üìä Total de eventos: ${events.length}\n`);

    for (const event of events) {
      console.log(`üìÖ Evento: ${event.name} (ID: ${event.id})`);
      console.log(`   Descri√ß√£o: ${event.description || 'Sem descri√ß√£o'}`);
      console.log(`   √Ålbuns: ${event._count.albums}`);
      console.log(`   Usu√°rios: ${event._count.users}`);
      console.log(`   Criado em: ${event.createdAt.toLocaleString('pt-BR')}\n`);

      if (event.albums.length > 0) {
        console.log(`   üìÅ √Ålbuns do evento:`);
        for (const album of event.albums) {
          console.log(`      - ${album.name} (ID: ${album.id})`);
          console.log(`        Descri√ß√£o: ${album.description || 'Sem descri√ß√£o'}`);
          console.log(`        Fotos: ${album._count.photos}`);
          console.log(`        Criado em: ${album.createdAt.toLocaleString('pt-BR')}`);
        }
        console.log('');
      } else {
        console.log(`   ‚ö†Ô∏è Nenhum √°lbum encontrado para este evento\n`);
      }
    }

    // Verificar total de √°lbuns
    const totalAlbums = await prisma.photoAlbum.count();
    console.log(`üìä Total de √°lbuns no sistema: ${totalAlbums}\n`);

    // Verificar total de fotos
    const totalPhotos = await prisma.photoGallery.count();
    console.log(`üì∏ Total de fotos no sistema: ${totalPhotos}\n`);

  } catch (error) {
    console.error('‚ùå Erro ao verificar √°lbuns:', error);
  } finally {
    await prisma.$disconnect();
  }
}

debugAlbums();